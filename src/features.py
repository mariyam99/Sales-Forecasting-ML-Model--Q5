# -*- coding: utf-8 -*-
"""Features.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f3MEDfWHF2NOMdaCqGsTqYBUIVyXLyUT
"""

import sys
sys.path.insert(0, '/content/drive/MyDrive/Question 5 - ML/src')

from dataprocessing_py import load_data

data = load_data('/content/drive/MyDrive/Question 5 - ML/training_data.csv', '/content/drive/MyDrive/Question 5 - ML/outlet_info.csv')
data.head()
data.count()

"""# **Aggerate Related Features (Primary Key)**"""

import pandas as pd

def aggregate_data(data):
    # Aggregate data for all stores and departments
    agg_data = data.groupby(['store', 'item_dept', 'date_id'])[['item_qty', 'net_sales']].sum().reset_index()

    # Convert 'date_id' to datetime format
    agg_data['date_id'] = pd.to_datetime(agg_data['date_id'], format='%m/%d/%Y')

    # Set 'date_id' as index for easier time series handling
    agg_data.set_index('date_id', inplace=True)

    return agg_data

"""# Time related features"""

"""
    Create time-related features from the date_id column.
"""

def create_time_features(df):
    # Extract various time features
    df['day_of_week'] = df.index.dayofweek
    df['is_weekend'] = df['day_of_week'].isin([5, 6]).astype(int)
    df['month'] = df.index.month
    df['quarter'] = df.index.quarter
    df['year'] = df.index.year

    return df

"""#Sales related features

"""

"""
Create lag features for item_qty and net_sales.
"""
def create_lag_features(df, lag_days=1):
    df[f'item_qty_lag_{lag_days}'] = df['item_qty'].shift(lag_days)
    df[f'net_sales_lag_{lag_days}'] = df['net_sales'].shift(lag_days)
    return df

"""#outlet related featuers"""

def calculate_store_sales_ratio(data):
    data['store_sales_ratio'] = data.groupby('store')['net_sales'].transform(lambda x: x / x.sum())
    return data

"""#item related features

"""

def calculate_item_features(df):

    # Example: price per item
    df['price_per_item'] = df['net_sales'] / df['item_qty']
    return df